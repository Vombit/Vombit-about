from flask import Flask, render_template
app = Flask(__name__)

projects = [
    {
        'title': 'Buy-Item-by-Pattern',
        'description': 'Бот предназначен для автоматической скупки предметов Steam, и уведомление в телеграм',
        'icons': ['Python', 'docker'],
        'language': 'Python',
        'github_link': 'https://github.com/Vombit/buy-item-by-pattern',
        'image': '6.jpg',
        'popup_description': 'В одном из прошлых заказов мне предстояло выполнить увлекательный, но несколько нетипичный проект. Это была задача, связанная с автоматизацией покупок в CS (Counter-Strike). Моя задача заключалась в том, чтобы создать систему, способную действовать от имени пользователя игры, покупая различные предметы в игровом мире. После успешной покупки система отправляла уведомления через Telegram-бота, дабы держать клиента в курсе процесса.<br><br>Разработка этой системы была увлекательным вызовом. Необходимость создания механизма, который эмулировал бы поведение человека в игре, требовала внимательного и тщательного подхода. Каждый шаг должен был быть точно спланирован и реализован, чтобы избежать возможных проблем с безопасностью и обнаружением системой steam.',
        'packages': [
            'steampy==0.80',
            'python-dotenv==1.0.0',
            'Pillow==9.5.0',
            'python-telegram-bot==20.3',
            'playwright==1.34.0'
        ]
    },
    {
        'title': 'Quasar',
        'description': 'Стриминговая платформа музыки',
        'icons': ['Python', 'docker', 'django', 'jquery'],
        'language': 'Python',
        'github_link': 'https://github.com/Vombit/quasar',
        'image': '8.jpg',
        'popup_description': 'Когда сервисы стриминга музыки, вроде Spotify и подобных, начали ограничивать доступ или становиться недоступными для определенных регионов, возникла идея создать собственную платформу для прослушивания музыки. Ведь каждый имеет право на музыкальное наслаждение, независимо от своего местоположения.<br><br>Важным моментом было обеспечение удобства использования и доступности этой платформы для пользователей, при этом сохраняя разнообразие музыкального контента. Такой подход позволял бы различным сообществам и географическим регионам создавать собственные кураторские системы или коллективы, делиться музыкальными предпочтениями и обогащать свой контент.<br><br>Таким образом, эта идея представляла собой не просто альтернативу для доступа к музыке, но и возможность для каждого создать свою уникальную музыкальную платформу, адаптированную под свои предпочтения и нужды.',
        'packages': [
            'asgiref==3.6.0',
            'backports.zoneinfo==0.2.1',
            'cutlet==0.1.19',
            'Django==4.1.5',
            'django-cleanup==6.0.0',
            'fugashi==1.2.1',
            'jaconv==0.3.3',
            'mojimoji==0.0.12',
            'mutagen==1.46.0',
            'Pillow==9.4.0',
            'six==1.16.0',
            'sorl-thumbnail==12.9.0',
            'sqlparse==0.4.3',
            'transliterate==1.10.2',
            'tzdata==2022.7',
            'unidic-lite==1.0.8'
        ]
    },
    {
        'title': 'IO-AI',
        'description': 'Телеграм-бот совмещенный с OpenAI',
        'icons': ['Python', 'docker'],
        'language': 'Python',
        'github_link': 'https://github.com/Vombit/io-ai',
        'image': '5.jpg',
        'popup_description': 'Один из проектов, над которым я работал, — создание персонального бота с доступом к функциям ChatGPT. Этот проект был задуман и реализован исключительно для удовольствия и развлечения.<br><br>Идея заключалась в том, чтобы разработать своего рода виртуального помощника, способного не только отвечать на вопросы, но и поддерживать увлекательные разговоры, предоставлять информацию и даже выполнять определенные задачи, используя возможности и знания ChatGPT.',
        'packages': [
            'openai==0.27.2',
            'python-telegram-bot==20.2',
            'python-dotenv==1.0.0'
        ]
    },
    {
        'title': 'Device-Moving-View',
        'description': 'Отслеживание местоположения, мониторинг и управление товаром',
        'icons': ['NodeJs', 'docker', 'jquery'],
        'language': 'Node.js',
        'github_link': 'https://github.com/Vombit/Device_Moving_View',
        'image': '2.jpg',
        'popup_description': 'Одним из самых значимых и запоминающихся проектов, который, по моему мнению, была работа, где я приобрел огромное количество новых знаний и навыков. Этот проект стал настоящей школой для меня, ведь именно здесь я познакомился с новыми методами разработки, такими как использование kanban-досок, проведение спринтов, участие в совещаниях и применение различных стратегий решения проблем.<br><br>Один из ключевых моментов этой работы заключался в том, что она научила меня не только следовать инструкциям, но и активно искать решения проблем самостоятельно. Это был ценный опыт, который сделал меня более самостоятельным и уверенным в своих силах разработчиком.<br><br>Хотелось бы выразить огромную благодарность нашему наставнику, который играл ключевую роль в этом проекте. Его поддержка, мудрые советы и экспертное руководство были неоценимы.',
        'packages': [
            'body-parser: ^1.19.0',
            'cookie-parser: ^1.4.5',
            'dotenv: ^9.0.2',
            'ejs: ~2.6.1',
            'express: ~4.16.1',
            'express-session: ^1.17.2',
            'fast-csv: ^4.3.6',
            'fast-csv-delims: 0.0.211',
            'fs: 0.0.1-security',
            'jimp: ^0.16.1',
            'multer: ^1.4.2',
            'mysql2: ^2.2.5',
            'qrcode: ^1.4.4',
            'url: ^0.11.0'
        ]
    },
    {
        'title': 'File-Separator',
        'description': 'Программа предназначенная для разбиения файлов на куски',
        'icons': ['Python', 'qt'],
        'language': 'Python',
        'github_link': 'https://github.com/Vombit/file-separator',
        'image': '7.jpg',
        'popup_description': 'Однажды у меня зародилась увлекательная идея создать программу, способную разбивать файлы на небольшие части, или чанки, и объединять их обратно при необходимости. Это была необычная, но практичная идея, которая позволяла обойти ограничения размера файла на различных сервисах. Идея заключалась в том, чтобы сделать возможным загружать файлы любого размера на сервисы, имеющие ограничения на размер загружаемых файлов.<br><br>В ходе работы над проектом я также попытался внедрить систему шифрования для каждого чанка файла. Это позволяло безопасно передавать и распространять файлы, сохраняя их конфиденциальность. Идея состояла в том, чтобы каждый чанк был зашифрован отдельно, что делало их независимыми друг от друга и усиливало безопасность при передаче или хранении данных.<br><br>Для меня этот проект стал настоящим вызовом и возможностью погрузиться в мир файловых систем, шифрования данных и оптимизации процесса работы с большими файлами.',
        'packages': [
            'cryptography==41.0.5',
            'PyQt5==5.15.10'
        ]
    },
    {
        'title': 'Sound-Waves',
        'description': 'Клиент-серверное приложения для трансляции звука в сети',
        'icons': ['Python'],
        'language': 'Python',
        'github_link': 'https://github.com/Vombit/Sound-Waves',
        'image': '4.jpg',
        'popup_description': 'Один из моих экспериментальных проектов заключался в создании программы, способной транслировать аудио сигналы с музыкальных источников или микрофона через локальную сеть. В рамках этого проекта была разработана серверная часть приложения, а также клиентское приложение на платформе Kivy для обеспечения удобства пользователей.<br><br>Хотя этот проект остался на стадии прототипа, он был увлекательным опытом в разработке программного обеспечения. Работа над ним позволила мне окунуться в мир разработки пользовательского интерфейса под различные операционные системы, что стало непривычным, но увлекательным вызовом. Использование фреймворка Kivy для создания клиентской части приложения открыло новые горизонты в создании интерфейсов и адаптации под разные платформы.<br><br>Одним из наиболее интересных аспектов этого проекта было работа с захватом аудио сигналов и музыкальных дорожек из системы. Это потребовало глубокого погружения в технические нюансы, связанные с обработкой звука, его захватом и передачей через сеть.',
        'packages': [
            'Flask==3.0.0',
            'PyAudio==0.2.14',
            'Kivy==2.2.1',
            'urllib3==2.1.0'
        ]
    },
    {
        'title': 'Yumi-v2.0',
        'description': 'Discord-бот с активностями и экономикой',
        'icons': ['NodeJs', 'discordjs'],
        'language': 'Node.js',
        'github_link': 'https://github.com/Vombit/Discord-Yumi-Bot-v2.0',
        'image': '3.jpg',
        'popup_description': 'Этот проект прошел через много изменений. На пике популярности Discord-серверов была идея создать бота для удовлетворения их потребностей.<br><br>Изначально он включал множество функций, от активности и профилей пользователей до экономики и трансляции музыки. На пике популярности число пользователей достигло ~200 000.<br><br>Однако, поддерживать такой амбициозный проект стало сложно в одиночку.<br><br>В конечном итоге, решено было оставить его в прошлом и двигаться дальше. Этот опыт стал важным уроком о необходимости адаптации к изменениям в динамичной сфере, как сообщества Discord.',
        'packages': [
            "@discordjs/opus: ^0.4.0",
            "discord.js: ^12.5.1",
            "distube: ^2.8.11",
            "dotenv: ^8.2.0",
            "ffmpeg-static: ^4.2.7",
            "fs: 0.0.1-security",
            "jimp: ^0.16.1",
            "mysql2: ^2.2.5"
        ]
    },
    {
        'title': 'VkCustom',
        'description': 'Изменение дизайна для Вконтакте',
        'icons': ['JavaScript'],
        'language': 'JavaScript',
        'github_link': 'https://github.com/Vombit/VkCustom',
        'image': '1.jpg',
        'popup_description': 'Изменение стиля для Вконтакте <br> <br>Дополнение добавляет в соц. сеть Vk.com тёмную тему, которая незначительно меняет дизайн сети и не даёт нагрузку на глаза в тёмное время суток.Расширь свои возможности. <br><br> Самый первый мой общедоступный проект, появился в следствии необходимости темной темы для Вк, когда её ещё не было. Самый простой принцип работы заменением оригинального css файла и добавление js скрипта, позволяющего изменять backgroud сайта на свое изображение/gif.<br>Расширение: <a href="https://chrome.google.com/webstore/detail/vkcustom/oehnhecdbdmdbkamifpmcddelbmfgjfh" target="_blank">chromewebstore</a> <br><br>Через призму времени, можно многое было бы изменить и улучшить, но я больше не вернусь...',
        'packages': ['none']
    },
]

@app.route('/')
def index() -> str:
    return render_template('index.html', projects=projects)

if __name__ == "__main__":
    app.run(host='0.0.0.0', port='80')
